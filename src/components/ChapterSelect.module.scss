@import '../resources/cssglobals';

// NOTE: We need the title to appear towards the
// top, which poses a problem since our wrapper
// needs 'flex-direction: row' for the tablet
// and desktop layouts. To fix this, we apply a
// padding to our wrapper and absolute position
// the title to take this space. The amount to 
// pad as well as the height of the actual title
// is stored in the following variable.
$TITLE_HEIGHT: 50px;


////////// WRAPPER //////////

.wrapper {
	// Leave room for title
	// --------------------
	// NOTE: This must be padding, as this class 
	// shares a div with the .page class, which
	// already has its own margin to account for
	// the fixed navbar.
	padding-top: $TITLE_HEIGHT;

	display: flex;
	flex-direction: column;
}

@media only screen and (min-width: $TABLET) {
	.wrapper {
		flex-direction: row;
		justify-content: center;
	}
}

////////// WRAPPER //////////




////////// TITLE //////////

.title {
	height: $TITLE_HEIGHT;

	position: absolute;
	top: 0; left: 50%;
	transform: translateX(-50%);

	font-size: 30px;
	font-family: 'Cinzel', serif;
}

////////// TITLE //////////




////////// IMG //////////

.img {
	display: none;
}

@media only screen and (min-width: $DESKTOP) {
	.img {
		height: 600px;
		display: block;
	}
}

////////// IMG //////////




////////// COLUMN //////////

.column {
	margin: 0 auto;
	display: flex;
	flex-direction: column;
}

@media only screen and (min-width: $TABLET) {
	.column {
		margin: 0 30px;
	}
}

////////// COLUMN //////////




////////// LINK //////////

.link {
	width: 230px;
	padding: 10px;
	margin: 10px 0;

	border-radius: 3px;
	a { color: #202020; }
}

// Align tops of columns and img.
.link:first-child {
	margin-top: 0;
}

////////// LINK //////////
