@import '../resources/cssglobals';

// NOTE: All text (title_en, title_jp, and desc) is
// grouped together in rendering, since it must
// be wrapped by an external <span> for the tablet
// layout. This causes some layout issues, which could 
// be fixed with just conditional rendering, but instead
// we use the 'order' property to manipulate how things are
// rendered. This method keeps the code more concise.


////////// BOOK WRAPPER //////////

.book {
	width: 100%;
	margin-bottom: 30px;

	// Relative position for svgs
	position: relative;

	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;

	// Necessary to have everything
	// appear above svg 
	* { z-index: 0; }
}

@media only screen and (min-width: $TABLET) {
	.book {
		height: 500px;
		flex-direction: row;
	}
}

@media only screen and (min-width: $DESKTOP) {
	.book {
		width: 155px;
		height: auto;
		margin: 0 30px;
		flex-direction: column;
	}
}

////////// BOOK WRAPPER //////////




////////// TITLES //////////

%title {
	// Force the titles to render
	// above the cover.
	order: -1;

	font-size: 22px;
	font-family: 'Cinzel', serif;
	text-align: center;
}

.title_en {
	@extend %title;
	margin-top: 20px;
}

.title_jp {
	@extend %title;
	margin-bottom: 20px;
}

@media only screen and (min-width: $TABLET) {
	.title_en, .title_jp{ 
		margin: 0;
		text-align: left;
	}
}

@media only screen and (min-width: $DESKTOP) {
	.title_en, .title_jp { 
		margin: 20px 0;
		text-align: center;
	}

	.title_jp { 
		// Force the Japanese title to render
		// underneath the cover.
		order: 1; 
	}
}

////////// TITLES //////////




////////// DESCRIPTION //////////

.desc {
	// Restrict width to maintain
	// slim look on wider screens.
	max-width: 300px; 

	margin-top: 20px;
	padding: 0 20px;
	text-align: center;
}

@media only screen and (min-width: $TABLET) {
	.desc {
		padding: 0;
		text-align: left;
	}
}

@media only screen and (min-width: $DESKTOP) {
	.desc {
		width: 300px;
		margin: 0;
		position: absolute;
		display: none;
	}


	// Change the position of the description and
	// the text direction based on whether the book
	// lies on the left or right side of the page.

	.book:nth-child(n+1):nth-child(-n+2) > .desc,
	.book:nth-child(n+5) > .desc {
		left: 125%;
		right: auto;
		text-align: left;
	}

	.book:nth-child(n+3):nth-child(-n+4) > .desc {
		left: auto;
		right: 125%;
		text-align: right;
	}
}

////////// DESCRIPTION //////////




////////// COVER //////////

.cover {
	height: 250px;
	box-shadow: 10px 12px 5px black;
}

@media only screen and (min-width: $TABLET) {
	.cover { 
		margin-right: 70px; 

		// Force the cover to appear to 
		// the left of the text 
		order: -1;
	}
}

@media only screen and (min-width: $DESKTOP) {
	.cover {
		margin: 0;

		// Negate the 'order: -1' from the tablet
		// layout by setting order back to 0.
		order: 0;
	}
}

////////// COVER //////////




////////// COVER HOVER (DESKTOP) //////////

@media only screen and (min-width: $DESKTOP) {
	.cover:hover ~ * {
		z-index: 1;
		display: block;
	}

	.cover:hover, {
		z-index: 2;
	}
}

////////// COVER HOVER (DESKTOP) //////////




////////// MASK //////////

.mask {
	width: 100%;
	height: 100%;

	position: fixed;
	top: 0; left: 0;

	display: none;

	background: rgba(20, 20, 20, 0.9);
}

////////// MASK //////////
