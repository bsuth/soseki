// Globals
@import '../resources/cssglobals';

// NOTE: All text (title_en, title_jp, and desc) is
// grouped together in rendering, since it must
// be wrapped by an external <span> for the tablet/desktop
// layouts. This causes some layout issues, which could 
// be fixed with just conditional rendering, but instead
// we use the 'order' property to manipulate how things are
// rendered. This method keeps the code more concise.


////////// BOOK WRAPPER //////////

.book {
	width: 100%;
	margin-bottom: 30px;

	// Relative position for svgs
	position: relative;

	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;

	// Necessary to have everything
	// appear above svg 
	* { z-index: 1; }

	svg {
		width: 100%;
		height: 100%;
		position: absolute;
	}
}

@media only screen and (min-width: $TABLET) {
	.book {
		height: 500px;
		flex-direction: row;
	}
}

////////// BOOK WRAPPER //////////




////////// TITLES //////////

%title {
	// Force the titles to render
	// above the cover (mobile)
	order: -1;

	font-size: 22px;
	font-family: 'Cinzel', serif;
	text-align: center;
}

.title_en {
	@extend %title;
	margin-top: 20px;
}

.title_jp {
	@extend %title;
	margin-bottom: 20px;
}

@media only screen and (min-width: $TABLET) {
	.title_en, .title_jp{ 
		margin: 0;
		text-align: left;
	}
}

////////// TITLES //////////




////////// DESCRIPTION //////////

.desc {
	// Restrict width to maintain
	// slim look on wider screens.
	max-width: 300px; 

	margin-top: 20px;
	padding: 0 20px;
	text-align: center;
}

@media only screen and (min-width: $TABLET) {
	.desc {
		padding: 0;
		text-align: left;
	}
}

////////// DESCRIPTION //////////




////////// COVER //////////

.cover {
	height: 250px;
	position: relative;
	box-shadow: 10px 12px 5px black;
}

@media only screen and (min-width: $TABLET) {
	.cover { 
		margin-right: 70px; 

		// Force the cover to appear to 
		// the left of the text 
		order: -1;
	}
}

////////// COVER //////////
